
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8D4C4563D9506A867147DF1B976ADCFE'
    
_lr_action_items = {'LPAREN':([0,4,8,9,10,16,17,18,19,20,21,24,28,36,37,40,43,],[8,20,8,-5,-6,8,8,8,8,8,8,20,20,43,8,8,8,]),'OPERATOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,30,31,32,33,35,36,37,38,39,40,41,42,43,44,46,47,49,],[9,18,-12,-13,-14,-15,9,-5,-6,-17,-18,-19,-20,-21,9,9,9,9,9,9,18,-12,-25,18,-12,-23,-30,18,-7,18,-16,9,9,-24,9,-22,-8,9,18,18,-9,-10,]),'NAME':([0,8,16,17,18,19,20,21,37,38,40,43,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'NUMBER':([0,8,16,17,18,19,20,21,37,40,43,],[11,11,11,11,11,11,11,11,11,11,11,]),'STRING':([0,8,16,17,18,19,20,21,37,40,43,],[15,15,15,15,15,15,15,15,15,15,15,]),'LBRACKET':([0,8,16,17,18,19,20,21,37,40,43,],[16,16,16,16,16,16,16,16,16,16,16,]),'LBRACE':([0,8,16,17,18,19,20,21,37,40,43,],[17,17,17,17,17,17,17,17,17,17,17,]),'$end':([1,2,3,4,5,6,7,9,10,11,12,13,14,15,26,28,30,31,32,33,35,36,39,41,42,44,47,49,],[0,-1,-2,-12,-13,-14,-15,-5,-6,-17,-18,-19,-20,-21,-25,-12,-23,-30,-11,-7,-26,-16,-24,-22,-8,-27,-9,-10,]),'COLON':([4,9,10,],[19,-5,-6,]),'MAPSTO':([4,9,10,24,28,],[21,-5,-6,21,21,]),'RPAREN':([5,6,7,9,10,11,12,13,14,15,20,22,24,26,27,28,30,31,33,34,35,36,39,41,42,43,44,46,47,48,49,],[-13,-14,-15,-5,-6,-17,-18,-19,-20,-21,33,36,-12,-25,-3,-12,-23,-30,-7,42,-26,-16,-24,-22,-8,47,-27,-4,-9,49,-10,]),'RBRACKET':([5,6,7,9,10,11,12,13,14,15,16,25,26,27,28,30,31,33,35,36,39,41,42,44,46,47,49,],[-13,-14,-15,-5,-6,-17,-18,-19,-20,-21,26,39,-25,-3,-12,-23,-30,-7,-26,-16,-24,-22,-8,-27,-4,-9,-10,]),'COMMA':([5,6,7,9,10,11,12,13,14,15,23,24,25,26,27,28,29,30,31,33,34,35,36,39,41,42,44,45,46,47,48,49,],[-13,-14,-15,-5,-6,-17,-18,-19,-20,-21,38,-28,40,-25,-3,-12,40,-23,-30,-7,40,-26,-16,-24,-22,-8,-27,-29,-4,-9,40,-10,]),'RBRACE':([5,6,7,9,10,11,12,13,14,15,17,26,27,28,29,30,31,33,35,36,39,41,42,44,46,47,49,],[-13,-14,-15,-5,-6,-17,-18,-19,-20,-21,30,-25,-3,-12,41,-23,-30,-7,-26,-16,-24,-22,-8,-27,-4,-9,-10,]),'RPAREN_MAPSTO':([9,10,23,24,45,],[-5,-6,37,-28,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'assign':([0,],[2,]),'expression':([0,8,16,17,18,19,20,21,37,40,43,],[3,22,27,27,31,32,27,35,44,46,27,]),'name':([0,8,16,17,18,19,20,21,37,38,40,43,],[4,24,28,28,28,28,28,28,28,45,28,28,]),'operator_invocation':([0,8,16,17,18,19,20,21,37,40,43,],[5,5,5,5,5,5,5,5,5,5,5,]),'call':([0,8,16,17,18,19,20,21,37,40,43,],[6,6,6,6,6,6,6,6,6,6,6,]),'literal':([0,8,16,17,18,19,20,21,37,40,43,],[7,7,7,7,7,7,7,7,7,7,7,]),'list':([0,8,16,17,18,19,20,21,37,40,43,],[12,12,12,12,12,12,12,12,12,12,12,]),'set':([0,8,16,17,18,19,20,21,37,40,43,],[13,13,13,13,13,13,13,13,13,13,13,]),'lambda':([0,8,16,17,18,19,20,21,37,40,43,],[14,14,14,14,14,14,14,14,14,14,14,]),'capture_list':([8,],[23,]),'arglist':([16,17,20,43,],[25,29,34,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> assign','statement',1,'p_statment','myth_parse.py',81),
  ('statement -> expression','statement',1,'p_statment','myth_parse.py',82),
  ('arglist -> expression','arglist',1,'p_arglist','myth_parse.py',93),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','myth_parse.py',94),
  ('name -> OPERATOR','name',1,'p_name','myth_parse.py',103),
  ('name -> NAME','name',1,'p_name','myth_parse.py',104),
  ('call -> name LPAREN RPAREN','call',3,'p_call_name','myth_parse.py',110),
  ('call -> name LPAREN arglist RPAREN','call',4,'p_call_name','myth_parse.py',111),
  ('call -> LPAREN expression RPAREN LPAREN RPAREN','call',5,'p_call_expression','myth_parse.py',120),
  ('call -> LPAREN expression RPAREN LPAREN arglist RPAREN','call',6,'p_call_expression','myth_parse.py',121),
  ('assign -> name COLON expression','assign',3,'p_assign','myth_parse.py',130),
  ('expression -> name','expression',1,'p_expression_name','myth_parse.py',136),
  ('expression -> operator_invocation','expression',1,'p_expression','myth_parse.py',142),
  ('expression -> call','expression',1,'p_expression','myth_parse.py',143),
  ('expression -> literal','expression',1,'p_expression','myth_parse.py',144),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','myth_parse.py',145),
  ('literal -> NUMBER','literal',1,'p_literal','myth_parse.py',154),
  ('literal -> list','literal',1,'p_literal','myth_parse.py',155),
  ('literal -> set','literal',1,'p_literal','myth_parse.py',156),
  ('literal -> lambda','literal',1,'p_literal','myth_parse.py',157),
  ('literal -> STRING','literal',1,'p_literal','myth_parse.py',158),
  ('set -> LBRACE arglist RBRACE','set',3,'p_set','myth_parse.py',164),
  ('set -> LBRACE RBRACE','set',2,'p_set','myth_parse.py',165),
  ('list -> LBRACKET arglist RBRACKET','list',3,'p_list','myth_parse.py',174),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','myth_parse.py',175),
  ('lambda -> name MAPSTO expression','lambda',3,'p_lambda','myth_parse.py',184),
  ('lambda -> LPAREN capture_list RPAREN_MAPSTO expression','lambda',4,'p_lambda','myth_parse.py',185),
  ('capture_list -> name','capture_list',1,'p_capture_list','myth_parse.py',194),
  ('capture_list -> capture_list COMMA name','capture_list',3,'p_capture_list','myth_parse.py',195),
  ('operator_invocation -> expression OPERATOR expression','operator_invocation',3,'p_operator_invocation','myth_parse.py',204),
]
