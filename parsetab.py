
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7F767DEF4289C7A68D993096C43660F3'
    
_lr_action_items = {'LPAREN':([0,4,7,9,10,11,15,21,22,23,24,25,26,27,30,32,33,34,42,44,45,47,48,53,55,57,58,63,65,66,70,],[9,25,27,9,-5,-6,34,9,9,9,9,9,44,9,25,25,9,9,-7,9,-11,58,9,9,-8,-12,9,9,9,-9,-10,]),'OPERATOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,36,37,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,68,69,70,],[10,23,-14,-15,-16,-17,-18,10,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,10,10,-39,10,10,10,23,-14,-40,-14,10,10,-30,23,-28,-38,23,-7,10,-11,-19,10,61,23,23,-29,10,-27,-8,23,-12,10,23,10,23,10,-9,23,23,-10,]),'NAME':([0,9,10,21,22,23,24,25,27,33,34,44,48,49,53,58,63,65,],[11,11,11,11,11,11,11,11,11,11,11,11,11,62,11,11,11,11,]),'BAR':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,27,31,32,33,34,36,39,40,42,44,45,47,48,50,52,53,54,55,57,58,59,63,65,66,68,69,70,],[15,-15,26,-17,-18,15,15,-6,-35,-36,-37,-22,-23,-24,-25,-26,15,15,15,15,15,15,-40,-14,15,15,-30,-28,-38,-7,15,-11,-19,15,-31,-29,15,-27,-8,-12,15,-32,15,15,-9,-20,-21,-10,]),'NUMBER':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'STRING':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LBRACKET':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LBRACE':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'$end':([1,2,3,4,5,6,7,8,10,11,12,13,14,16,17,18,19,20,23,31,32,36,39,40,41,42,45,47,50,52,54,55,57,59,66,68,69,70,],[0,-1,-2,-14,-15,-16,-17,-18,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,-39,-40,-14,-30,-28,-38,-13,-7,-11,-19,-31,-29,-27,-8,-12,-32,-9,-20,-21,-10,]),'COLON':([4,10,11,],[24,-5,-6,]),'RPAREN':([5,6,7,8,10,11,12,13,14,16,17,18,19,20,23,25,27,28,30,31,32,36,37,39,40,42,43,45,46,47,50,52,54,55,57,58,59,64,66,67,68,69,70,],[-15,-16,-17,-18,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,-39,42,45,47,-14,-40,-14,-30,-3,-28,-38,-7,55,-11,57,-19,-31,-29,-27,-8,-12,66,-32,-4,-9,70,-20,-21,-10,]),'RBRACKET':([5,6,7,8,10,11,12,13,14,16,17,18,19,20,21,23,31,32,35,36,37,39,40,42,45,47,50,52,54,55,57,59,64,66,68,69,70,],[-15,-16,-17,-18,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,36,-39,-40,-14,52,-30,-3,-28,-38,-7,-11,-19,-31,-29,-27,-8,-12,-32,-4,-9,-20,-21,-10,]),'COMMA':([5,6,7,8,10,11,12,13,14,16,17,18,19,20,23,29,30,31,32,35,36,37,38,39,40,42,43,45,46,47,50,52,54,55,57,59,60,61,62,64,66,67,68,69,70,],[-15,-16,-17,-18,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,-39,49,-33,-40,-14,53,-30,-3,53,-28,-38,-7,53,-11,53,-19,-31,-29,-27,-8,-12,-32,-34,-5,-6,-4,-9,53,-20,-21,-10,]),'RBRACE':([5,6,7,8,10,11,12,13,14,16,17,18,19,20,22,23,31,32,36,37,38,39,40,42,45,47,50,52,54,55,57,59,64,66,68,69,70,],[-15,-16,-17,-18,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,39,-39,-40,-14,-30,-3,54,-28,-38,-7,-11,-19,-31,-29,-27,-8,-12,-32,-4,-9,-20,-21,-10,]),'RPAREN_MAPSTO':([5,6,7,8,10,11,12,13,14,16,17,18,19,20,23,29,30,31,32,36,39,40,42,45,47,50,51,52,54,55,56,57,59,60,61,62,66,68,69,70,],[-15,-16,-17,-18,-5,-6,-35,-36,-37,-22,-23,-24,-25,-26,-39,48,-33,-40,-14,-30,-28,-38,-7,-11,-19,-31,63,-29,-27,-8,65,-12,-32,-34,-5,-6,-9,-20,-21,-10,]),'MAPSTO':([11,],[33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'assign':([0,],[2,]),'expression':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[3,28,31,37,37,40,41,37,37,50,51,56,59,64,37,68,69,]),'name':([0,9,10,21,22,23,24,25,27,33,34,44,48,49,53,58,63,65,],[4,30,32,32,32,32,32,32,32,32,32,32,32,60,32,32,32,32,]),'operator_invocation':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'conditional':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'call':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'literal':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'operator_invocation_postfix':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'operator_invocation_prefix':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operator_invocation_infix':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'list':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'set':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'lambda':([0,9,10,21,22,23,24,25,27,33,34,44,48,53,58,63,65,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'capture_list':([9,],[29,]),'arglist':([21,22,25,27,58,],[35,38,43,46,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> assign','statement',1,'p_statment','myth_parse.py',118),
  ('statement -> expression','statement',1,'p_statment','myth_parse.py',119),
  ('arglist -> expression','arglist',1,'p_arglist','myth_parse.py',130),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','myth_parse.py',131),
  ('name -> OPERATOR','name',1,'p_name','myth_parse.py',140),
  ('name -> NAME','name',1,'p_name','myth_parse.py',141),
  ('call -> name LPAREN RPAREN','call',3,'p_call_name','myth_parse.py',147),
  ('call -> name LPAREN arglist RPAREN','call',4,'p_call_name','myth_parse.py',148),
  ('call -> LPAREN expression RPAREN LPAREN RPAREN','call',5,'p_call_expression','myth_parse.py',157),
  ('call -> LPAREN expression RPAREN LPAREN arglist RPAREN','call',6,'p_call_expression','myth_parse.py',158),
  ('call -> call LPAREN RPAREN','call',3,'p_call_curried','myth_parse.py',164),
  ('call -> call LPAREN arglist RPAREN','call',4,'p_call_curried','myth_parse.py',165),
  ('assign -> name COLON expression','assign',3,'p_assign','myth_parse.py',171),
  ('expression -> name','expression',1,'p_expression_name','myth_parse.py',177),
  ('expression -> operator_invocation','expression',1,'p_expression','myth_parse.py',183),
  ('expression -> conditional','expression',1,'p_expression','myth_parse.py',184),
  ('expression -> call','expression',1,'p_expression','myth_parse.py',185),
  ('expression -> literal','expression',1,'p_expression','myth_parse.py',186),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','myth_parse.py',187),
  ('conditional -> BAR LPAREN expression RPAREN_MAPSTO expression','conditional',5,'p_conditional','myth_parse.py',196),
  ('conditional -> conditional BAR LPAREN expression RPAREN_MAPSTO expression','conditional',6,'p_conditional','myth_parse.py',197),
  ('literal -> NUMBER','literal',1,'p_literal','myth_parse.py',206),
  ('literal -> list','literal',1,'p_literal','myth_parse.py',207),
  ('literal -> set','literal',1,'p_literal','myth_parse.py',208),
  ('literal -> lambda','literal',1,'p_literal','myth_parse.py',209),
  ('literal -> STRING','literal',1,'p_literal','myth_parse.py',210),
  ('set -> LBRACE arglist RBRACE','set',3,'p_set','myth_parse.py',216),
  ('set -> LBRACE RBRACE','set',2,'p_set','myth_parse.py',217),
  ('list -> LBRACKET arglist RBRACKET','list',3,'p_list','myth_parse.py',226),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','myth_parse.py',227),
  ('lambda -> NAME MAPSTO expression','lambda',3,'p_lambda','myth_parse.py',236),
  ('lambda -> LPAREN capture_list RPAREN_MAPSTO expression','lambda',4,'p_lambda','myth_parse.py',237),
  ('capture_list -> name','capture_list',1,'p_capture_list','myth_parse.py',246),
  ('capture_list -> capture_list COMMA name','capture_list',3,'p_capture_list','myth_parse.py',247),
  ('operator_invocation -> operator_invocation_postfix','operator_invocation',1,'p_operator_invocation','myth_parse.py',256),
  ('operator_invocation -> operator_invocation_prefix','operator_invocation',1,'p_operator_invocation','myth_parse.py',257),
  ('operator_invocation -> operator_invocation_infix','operator_invocation',1,'p_operator_invocation','myth_parse.py',258),
  ('operator_invocation_infix -> expression OPERATOR expression','operator_invocation_infix',3,'p_operator_invocation_infix','myth_parse.py',264),
  ('operator_invocation_postfix -> expression OPERATOR','operator_invocation_postfix',2,'p_operator_invocation_postfix','myth_parse.py',270),
  ('operator_invocation_prefix -> OPERATOR expression','operator_invocation_prefix',2,'p_operator_invocation_prefix','myth_parse.py',276),
]
